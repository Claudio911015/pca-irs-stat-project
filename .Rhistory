butterfly2_10_30 = (DSWP10 - DSWP5) - (DSWP30 - DSWP10)
third_factor_butterfly = data.frame(rownames(scores), scores_dataframe$pc3, last(butterfly2_10_30, 250))
colnames(third_factor_butterfly) = c('date', 'pc3', 'butterfly2y10y30y')
third_factor_butterfly$pc3 = -third_factor_butterfly$pc3
p1 = ggplot() + geom_line(data=third_factor_butterfly, aes(x=as.Date(date), y=pc3), colour=gg_color_hue(1)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
p2 = ggplot() + geom_line(data=third_factor_butterfly, aes(x=as.Date(date), y=butterfly2y10y30y), colour=gg_color_hue(2)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + theme(panel.background = element_rect(fill = NA))
g = stack_plot(p1, p2)
grid.draw(g)
second_factor_10y2y = data.frame(rownames(scores), scores_dataframe$pc2, last(curve10_2, 250))
colnames(second_factor_10y2y) = c('date', 'pc2', 'curve10y2y')
p1 = ggplot() + geom_line(data=second_factor_10y2y, aes(x=as.Date(date), y=pc2), colour=gg_color_hue(1)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
p2 = ggplot() + geom_line(data=second_factor_10y2y, aes(x=as.Date(date), y=curve10y2y), colour=gg_color_hue(2)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + theme(panel.background = element_rect(fill = NA))
g = stack_plot(p1, p2)
grid.draw(g)
second_factor_10y2y = data.frame(rownames(scores), scores_dataframe$pc2, last(curve10_5, 250))
colnames(second_factor_10y2y) = c('date', 'pc2', 'curve10y2y')
p1 = ggplot() + geom_line(data=second_factor_10y2y, aes(x=as.Date(date), y=pc2), colour=gg_color_hue(1)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
p2 = ggplot() + geom_line(data=second_factor_10y2y, aes(x=as.Date(date), y=curve10y2y), colour=gg_color_hue(2)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + theme(panel.background = element_rect(fill = NA))
g = stack_plot(p1, p2)
grid.draw(g)
second_factor_10y2y = data.frame(rownames(scores), scores_dataframe$pc2, last(curve30_10, 250))
colnames(second_factor_10y2y) = c('date', 'pc2', 'curve10y2y')
p1 = ggplot() + geom_line(data=second_factor_10y2y, aes(x=as.Date(date), y=pc2), colour=gg_color_hue(1)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
p2 = ggplot() + geom_line(data=second_factor_10y2y, aes(x=as.Date(date), y=curve10y2y), colour=gg_color_hue(2)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + theme(panel.background = element_rect(fill = NA))
g = stack_plot(p1, p2)
grid.draw(g)
second_factor_10y2y = data.frame(rownames(scores), scores_dataframe$pc2, last(curve10_1, 250))
colnames(second_factor_10y2y) = c('date', 'pc2', 'curve10y2y')
p1 = ggplot() + geom_line(data=second_factor_10y2y, aes(x=as.Date(date), y=pc2), colour=gg_color_hue(1)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
p2 = ggplot() + geom_line(data=second_factor_10y2y, aes(x=as.Date(date), y=curve10y2y), colour=gg_color_hue(2)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + theme(panel.background = element_rect(fill = NA))
g = stack_plot(p1, p2)
grid.draw(g)
second_factor_10y2y = data.frame(rownames(scores), scores_dataframe$pc2, last(curve10_1, 250))
colnames(second_factor_10y2y) = c('date', 'pc2', 'curve10y2y')
p1 = ggplot() + geom_line(data=second_factor_10y2y, aes(x=as.Date(date), y=pc2), colour=gg_color_hue(1)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
p2 = ggplot() + geom_line(data=second_factor_10y2y, aes(x=as.Date(date), y=curve10y2y), colour=gg_color_hue(2)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + theme(panel.background = element_rect(fill = NA))
g = stack_plot(p1, p2)
grid.draw(g)
second_factor_10y2y = data.frame(rownames(scores), scores_dataframe$pc2, last(curve10_2, 250))
colnames(second_factor_10y2y) = c('date', 'pc2', 'curve10y2y')
p1 = ggplot() + geom_line(data=second_factor_10y2y, aes(x=as.Date(date), y=pc2), colour=gg_color_hue(1)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
p2 = ggplot() + geom_line(data=second_factor_10y2y, aes(x=as.Date(date), y=curve10y2y), colour=gg_color_hue(2)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + theme(panel.background = element_rect(fill = NA))
g = stack_plot(p1, p2)
grid.draw(g)
# third factor analysis
loadings
loadings[1,1]
loadings[2,1]
?loadings
?princomp
View(fit$scores)
library(quantmod)
library(downloader)
terms = c(1, 2, 3, 4, 5, 7, 10, 30)
for (term in terms) {
getSymbols(paste('DSWP', term, sep=''), src='FRED')
}
DSWP1 = DSWP1[!is.na(DSWP1)]
DSWP2 = DSWP2[!is.na(DSWP2)]
DSWP3 = DSWP3[!is.na(DSWP3)]
DSWP4 = DSWP4[!is.na(DSWP4)]
DSWP5 = DSWP5[!is.na(DSWP5)]
DSWP7 = DSWP7[!is.na(DSWP7)]
DSWP10 = DSWP10[!is.na(DSWP10)]
DSWP30 = DSWP30[!is.na(DSWP30)]
# 2-1, 3-1, 4-1, 5-1, 7-1, 10-2, 10-5, 30-10
curve2_1 = DSWP2 - DSWP1
curve3_1 = DSWP3 - DSWP1
curve4_1 = DSWP4 - DSWP1
curve5_1 = DSWP5 - DSWP1
curve7_1 = DSWP7 - DSWP1
curve10_2 = DSWP10 - DSWP2
curve10_5 = DSWP10 - DSWP5
curve30_10 = DSWP30 - DSWP10
rates = cbind(curve2_1, curve3_1, curve4_1, curve5_1, curve7_1, curve10_2, curve10_5, curve30_10)
rates = last(rates, 250)
colnames(rates) = c('curve2y1y', 'curve3y1y', 'curve4y1y', 'curve5y1y', 'curve7y1y', 'curve10y2y', 'curve10y5y', 'curve30y10y')
library(ggplot2)
library(reshape)
dataframe = data.frame(index(rates), rates)
colnames(dataframe) = c('date', 'curve2y1y', 'curve3y1y', 'curve4y1y', 'curve5y1y', 'curve7y1y', 'curve10y2y', 'curve10y5y', 'curve30y10y')
melted = melt(dataframe, id.vars='date')
plot = ggplot(data=melted, aes(x=as.Date(date), y=value, color=variable)) + geom_line()
plot
plot = ggplot(data=melted, aes(x=as.Date(date), y=value, color=variable)) + geom_line() + xlab('Curve Rates') + ylab('Date')
plot
pcadata = rates
fit = princomp(pcadata, cor=FALSE, scores=TRUE)
covariance_matrix = cor(pcadata)
require(corrplot)
corrplot(covariance_matrix, method='shade', type='full', shade.col=NA, tl.col='black')
library(ggbiplot)
ggbiplot(fit, obs.scale=1, var.scale=1)
ggscreeplot(fit)
scores = fit$scores
scores_dataframe = data.frame(index(scores), scores)
colnames(scores_dataframe) = c('date', 'pc1', 'pc2', 'pc3', 'pc4', 'pc5', 'pc6', 'pc7', 'pc8')
keeps = c('date', 'pc1', 'pc2', 'pc3')
scores_dataframe = scores_dataframe[keeps]
scores_melted = melt(scores_dataframe, id.vars='date')
plot = ggplot(data=scores_melted, aes(x=as.Date(date), y=value, color=variable)) + geom_line()
plot
scores = fit$scores
scores_dataframe = data.frame(index(rates), scores)
colnames(scores_dataframe) = c('date', 'pc1', 'pc2', 'pc3', 'pc4', 'pc5', 'pc6', 'pc7', 'pc8')
keeps = c('date', 'pc1', 'pc2', 'pc3')
scores_dataframe = scores_dataframe[keeps]
scores_melted = melt(scores_dataframe, id.vars='date')
plot = ggplot(data=scores_melted, aes(x=as.Date(date), y=value, color=variable)) + geom_line() + xlab('Date') + ylab('Principal Component Score')
plot
loadings = with(fit, unclass(loadings))
loadings
loadings_dataframe = data.frame(index(loadings), loadings)
colnames(loadings_dataframe) = c('tenor', 'pc1', 'pc2', 'pc3', 'pc4', 'pc5', 'pc6', 'pc7', 'pc8')
keeps = c('tenor', 'pc1', 'pc2', 'pc3')
loadings_dataframe = loadings_dataframe[keeps]
loadings_melted = melt(loadings_dataframe, id.vars='tenor')
plot = ggplot() + geom_line(data=loadings_melted, aes(x=tenor, y=value, color=variable)) + scale_x_discrete(labels=c('2y1y', '3y1y', '4y1y', '5y1y', '7y1y', '10y2y', '10y5y', '30y10y'))
plot
loadings_dataframe = data.frame(index(loadings), loadings)
colnames(loadings_dataframe) = c('tenor', 'pc1', 'pc2', 'pc3', 'pc4', 'pc5', 'pc6', 'pc7', 'pc8')
keeps = c('tenor', 'pc1', 'pc2', 'pc3')
loadings_dataframe = loadings_dataframe[keeps]
loadings_melted = melt(loadings_dataframe, id.vars='tenor')
plot = ggplot() + geom_line(data=loadings_melted, aes(x=tenor, y=value, color=variable)) + scale_x_discrete(labels=c('2y1y', '3y1y', '4y1y', '5y1y', '7y1y', '10y2y', '10y5y', '30y10y')) + xlab('Tenor') + ylab('Loading of First 3 PCs')
plot
# first factor analysis
source('graphing_utility.R')
first_factor_10y = data.frame(rownames(scores), scores_dataframe$pc1, last(DSWP10, 250))
colnames(first_factor_10y) = c('date', 'pc1', 'y10')
first_factor_10y$pc1 = -first_factor_10y$pc1
p1 = ggplot() + geom_line(data=first_factor_10y, aes(x=as.Date(date), y=pc1), colour=gg_color_hue(1)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + xlab('Date') + ylab('left/red: PC1, right/blue: 10y Yield')
p2 = ggplot() + geom_line(data=first_factor_10y, aes(x=as.Date(date), y=y10), colour=gg_color_hue(2)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + theme(panel.background = element_rect(fill = NA))
g = stack_plot(p1, p2)
grid.draw(g)
p1 = ggplot() + geom_line(data=first_factor_10y, aes(x=as.Date(date), y=pc1), colour=gg_color_hue(1)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + xlab('Date') + ylab('left/red: PC1\nright/blue: 10y Yield')
p2 = ggplot() + geom_line(data=first_factor_10y, aes(x=as.Date(date), y=y10), colour=gg_color_hue(2)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + theme(panel.background = element_rect(fill = NA))
g = stack_plot(p1, p2)
grid.draw(g)
# second factor analysis
second_factor_10y2y = data.frame(rownames(scores), scores_dataframe$pc2, last(curve10_2, 250))
colnames(second_factor_10y2y) = c('date', 'pc2', 'curve10y2y')
p1 = ggplot() + geom_line(data=second_factor_10y2y, aes(x=as.Date(date), y=pc2), colour=gg_color_hue(1)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + xlab('Date') + ylab('left/red: PC2\nright/blue: 10s2s Yield')
p2 = ggplot() + geom_line(data=second_factor_10y2y, aes(x=as.Date(date), y=curve10y2y), colour=gg_color_hue(2)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + theme(panel.background = element_rect(fill = NA))
g = stack_plot(p1, p2)
grid.draw(g)
# third factor analysis
butterfly2_10_30 = (DSWP10 - DSWP5) - (DSWP30 - DSWP10)
third_factor_butterfly = data.frame(rownames(scores), scores_dataframe$pc3, last(butterfly2_10_30, 250))
colnames(third_factor_butterfly) = c('date', 'pc3', 'butterfly2y10y30y')
third_factor_butterfly$pc3 = -third_factor_butterfly$pc3
p1 = ggplot() + geom_line(data=third_factor_butterfly, aes(x=as.Date(date), y=pc3), colour=gg_color_hue(1)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + xlab('Date') + ylab('left/red: PC3\nright/blue: 2s10s30s Yield')
p2 = ggplot() + geom_line(data=third_factor_butterfly, aes(x=as.Date(date), y=butterfly2y10y30y), colour=gg_color_hue(2)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + theme(panel.background = element_rect(fill = NA))
g = stack_plot(p1, p2)
grid.draw(g)
source('~/.active-rstudio-document')
library(quantmod)
library(downloader)
terms = c(1, 2, 3, 4, 5, 7, 10, 30)
for (term in terms) {
getSymbols(paste('DSWP', term, sep=''), src='FRED')
}
DSWP1 = DSWP1[!is.na(DSWP1)]
DSWP2 = DSWP2[!is.na(DSWP2)]
DSWP3 = DSWP3[!is.na(DSWP3)]
DSWP4 = DSWP4[!is.na(DSWP4)]
DSWP5 = DSWP5[!is.na(DSWP5)]
DSWP7 = DSWP7[!is.na(DSWP7)]
DSWP10 = DSWP10[!is.na(DSWP10)]
DSWP30 = DSWP30[!is.na(DSWP30)]
# 2-1, 3-1, 4-1, 5-1, 7-1, 10-2, 10-5, 30-10
curve2_1 = DSWP2 - DSWP1
curve3_1 = DSWP3 - DSWP1
curve4_1 = DSWP4 - DSWP1
curve5_1 = DSWP5 - DSWP1
curve7_1 = DSWP7 - DSWP1
curve10_2 = DSWP10 - DSWP2
curve10_5 = DSWP10 - DSWP5
curve30_10 = DSWP30 - DSWP10
curve2_1 = diff(curve2_1, lag=1)
curve3_1 = diff(curve3_1, lag=1)
curve4_1 = diff(curve4_1, lag=1)
curve5_1 = diff(curve5_1, lag=1)
curve7_1 = diff(curve7_1, lag=1)
curve10_2 = diff(curve10_2, lag=1)
curve10_5 = diff(curve10_5, lag=1)
curve30_10 = diff(curve30_10, lag=1)
curve2_1 = curve2_1[!is.na(curve2_1)]
curve3_1 = curve3_1[!is.na(curve3_1)]
curve4_1 = curve4_1[!is.na(curve4_1)]
curve5_1 = curve5_1[!is.na(curve5_1)]
curve7_1 = curve7_1[!is.na(curve7_1)]
curve10_2 = curve10_2[!is.na(curve10_2)]
curve10_5 = curve10_5[!is.na(curve10_5)]
curve30_10 = curve30_10[!is.na(curve30_10)]
View(dailyReturns(DSWP1))
?dailyreturns
?dailyreturn
View(dailyReturn(DSWP1))
library(quantmod)
library(downloader)
terms = c(1, 2, 3, 4, 5, 7, 10, 30)
for (term in terms) {
getSymbols(paste('DSWP', term, sep=''), src='FRED')
}
DSWP1 = DSWP1[!is.na(DSWP1)]
DSWP2 = DSWP2[!is.na(DSWP2)]
DSWP3 = DSWP3[!is.na(DSWP3)]
DSWP4 = DSWP4[!is.na(DSWP4)]
DSWP5 = DSWP5[!is.na(DSWP5)]
DSWP7 = DSWP7[!is.na(DSWP7)]
DSWP10 = DSWP10[!is.na(DSWP10)]
DSWP30 = DSWP30[!is.na(DSWP30)]
# 2-1, 3-1, 4-1, 5-1, 7-1, 10-2, 10-5, 30-10
curve2_1 = DSWP2 - DSWP1
curve3_1 = DSWP3 - DSWP1
curve4_1 = DSWP4 - DSWP1
curve5_1 = DSWP5 - DSWP1
curve7_1 = DSWP7 - DSWP1
curve10_2 = DSWP10 - DSWP2
curve10_5 = DSWP10 - DSWP5
curve30_10 = DSWP30 - DSWP10
View(curve2_1)
curve2_1 = dailyReturn(curve2_1)
curve3_1 = dailyReturn(curve3_1)
curve4_1 = dailyReturn(curve4_1)
curve5_1 = dailyReturn(curve5_1)
curve7_1 = dailyReturn(curve7_1)
curve10_2 = dailyReturn(curve10_2)
curve10_5 = dailyReturn(curve10_5)
curve30_10 = dailyReturn(curve30_10)
View(curve2_1)
rates = cbind(curve2_1, curve3_1, curve4_1, curve5_1, curve7_1, curve10_2, curve10_5, curve30_10)
rates = last(rates, 250)
colnames(rates) = c('curve2y1y', 'curve3y1y', 'curve4y1y', 'curve5y1y', 'curve7y1y', 'curve10y2y', 'curve10y5y', 'curve30y10y')
View(rates)
library(ggplot2)
library(reshape)
dataframe = data.frame(index(rates), rates)
colnames(dataframe) = c('date', 'curve2y1y', 'curve3y1y', 'curve4y1y', 'curve5y1y', 'curve7y1y', 'curve10y2y', 'curve10y5y', 'curve30y10y')
melted = melt(dataframe, id.vars='date')
plot = ggplot(data=melted, aes(x=as.Date(date), y=value, color=variable)) + geom_line() + xlab('Curve Rates') + ylab('Date')
plot
pcadata = rates
fit = princomp(pcadata, cor=FALSE, scores=TRUE)
covariance_matrix = cor(pcadata)
require(corrplot)
corrplot(covariance_matrix, method='shade', type='full', shade.col=NA, tl.col='black')
library(ggbiplot)
ggbiplot(fit, obs.scale=1, var.scale=1)
ggscreeplot(fit)
scores = fit$scores
scores_dataframe = data.frame(index(rates), scores)
colnames(scores_dataframe) = c('date', 'pc1', 'pc2', 'pc3', 'pc4', 'pc5', 'pc6', 'pc7', 'pc8')
keeps = c('date', 'pc1', 'pc2', 'pc3')
scores_dataframe = scores_dataframe[keeps]
scores_melted = melt(scores_dataframe, id.vars='date')
plot = ggplot(data=scores_melted, aes(x=as.Date(date), y=value, color=variable)) + geom_line() + xlab('Date') + ylab('Principal Component Score')
plot
loadings = with(fit, unclass(loadings))
loadings
loadings_dataframe = data.frame(index(loadings), loadings)
colnames(loadings_dataframe) = c('tenor', 'pc1', 'pc2', 'pc3', 'pc4', 'pc5', 'pc6', 'pc7', 'pc8')
keeps = c('tenor', 'pc1', 'pc2', 'pc3')
loadings_dataframe = loadings_dataframe[keeps]
loadings_melted = melt(loadings_dataframe, id.vars='tenor')
plot = ggplot() + geom_line(data=loadings_melted, aes(x=tenor, y=value, color=variable)) + scale_x_discrete(labels=c('2y1y', '3y1y', '4y1y', '5y1y', '7y1y', '10y2y', '10y5y', '30y10y')) + xlab('Tenor') + ylab('Loading of First 3 PCs')
plot
# first factor analysis
source('graphing_utility.R')
first_factor_10y = data.frame(rownames(scores), scores_dataframe$pc1, last(DSWP10, 250))
colnames(first_factor_10y) = c('date', 'pc1', 'y10')
first_factor_10y$pc1 = -first_factor_10y$pc1
p1 = ggplot() + geom_line(data=first_factor_10y, aes(x=as.Date(date), y=pc1), colour=gg_color_hue(1)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + xlab('Date') + ylab('left/red: PC1\nright/blue: 10y Yield')
p2 = ggplot() + geom_line(data=first_factor_10y, aes(x=as.Date(date), y=y10), colour=gg_color_hue(2)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + theme(panel.background = element_rect(fill = NA))
g = stack_plot(p1, p2)
grid.draw(g)
first_factor_10y = data.frame(rownames(scores), scores_dataframe$pc1, dailyReturn(last(DSWP10, 250)))
colnames(first_factor_10y) = c('date', 'pc1', 'y10')
first_factor_10y$pc1 = -first_factor_10y$pc1
p1 = ggplot() + geom_line(data=first_factor_10y, aes(x=as.Date(date), y=pc1), colour=gg_color_hue(1)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + xlab('Date') + ylab('left/red: PC1\nright/blue: 10y Yield')
p2 = ggplot() + geom_line(data=first_factor_10y, aes(x=as.Date(date), y=y10), colour=gg_color_hue(2)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + theme(panel.background = element_rect(fill = NA))
g = stack_plot(p1, p2)
grid.draw(g)
?corr
?correlation
corr
cor
?cor
cor(first_factor_10y$pc1, first_factor_10y$y10)
first_factor_cor = cor(first_factor_10y$pc1, first_factor_10y$y10)
first_factor_cor
second_factor_10y2y = data.frame(rownames(scores), scores_dataframe$pc2, last(curve10_2, 250))
colnames(second_factor_10y2y) = c('date', 'pc2', 'curve10y2y')
p1 = ggplot() + geom_line(data=second_factor_10y2y, aes(x=as.Date(date), y=pc2), colour=gg_color_hue(1)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + xlab('Date') + ylab('left/red: PC2\nright/blue: 10s2s Yield')
p2 = ggplot() + geom_line(data=second_factor_10y2y, aes(x=as.Date(date), y=curve10y2y), colour=gg_color_hue(2)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + theme(panel.background = element_rect(fill = NA))
g = stack_plot(p1, p2)
grid.draw(g)
second_factor_cor = cor(second_factor_10y2y$pc2, second_factor_10y2y$curve10y2y)
second_factor_cor
second_factor_10y2y = data.frame(rownames(scores), scores_dataframe$pc2, dailyReturn(last(curve10_2, 250)))
colnames(second_factor_10y2y) = c('date', 'pc2', 'curve10y2y')
p1 = ggplot() + geom_line(data=second_factor_10y2y, aes(x=as.Date(date), y=pc2), colour=gg_color_hue(1)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + xlab('Date') + ylab('left/red: PC2\nright/blue: 10s2s Yield')
p2 = ggplot() + geom_line(data=second_factor_10y2y, aes(x=as.Date(date), y=curve10y2y), colour=gg_color_hue(2)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + theme(panel.background = element_rect(fill = NA))
g = stack_plot(p1, p2)
grid.draw(g)
second_factor_cor = cor(second_factor_10y2y$pc2, second_factor_10y2y$curve10y2y)
second_factor_cor
second_factor_10y2y = data.frame(rownames(scores), scores_dataframe$pc2, (last(curve10_2, 250)))
colnames(second_factor_10y2y) = c('date', 'pc2', 'curve10y2y')
p1 = ggplot() + geom_line(data=second_factor_10y2y, aes(x=as.Date(date), y=pc2), colour=gg_color_hue(1)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + xlab('Date') + ylab('left/red: PC2\nright/blue: 10s2s Yield')
p2 = ggplot() + geom_line(data=second_factor_10y2y, aes(x=as.Date(date), y=curve10y2y), colour=gg_color_hue(2)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + theme(panel.background = element_rect(fill = NA))
g = stack_plot(p1, p2)
grid.draw(g)
second_factor_cor = cor(second_factor_10y2y$pc2, second_factor_10y2y$curve10y2y)
second_factor_cor
second_factor_10y2y$pc2 = -second_factor_10y2y$pc2
p1 = ggplot() + geom_line(data=second_factor_10y2y, aes(x=as.Date(date), y=pc2), colour=gg_color_hue(1)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + xlab('Date') + ylab('left/red: PC2\nright/blue: 10s2s Yield')
p2 = ggplot() + geom_line(data=second_factor_10y2y, aes(x=as.Date(date), y=curve10y2y), colour=gg_color_hue(2)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + theme(panel.background = element_rect(fill = NA))
g = stack_plot(p1, p2)
grid.draw(g)
second_factor_cor = cor(second_factor_10y2y$pc2, second_factor_10y2y$curve10y2y)
second_factor_cor
third_factor_cor = cor(third_factor_butterfly$pc3, third_factor_butterfly$butterfly2y10y30y)
third_factor_cor
butterfly2_10_30 = (DSWP10 - DSWP5) - (DSWP30 - DSWP10)
third_factor_butterfly = data.frame(rownames(scores), scores_dataframe$pc3, dailyReturn(last(butterfly2_10_30, 250)))
colnames(third_factor_butterfly) = c('date', 'pc3', 'butterfly2y10y30y')
third_factor_butterfly$pc3 = -third_factor_butterfly$pc3
p1 = ggplot() + geom_line(data=third_factor_butterfly, aes(x=as.Date(date), y=pc3), colour=gg_color_hue(1)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + xlab('Date') + ylab('left/red: PC3\nright/blue: 2s10s30s Yield')
p2 = ggplot() + geom_line(data=third_factor_butterfly, aes(x=as.Date(date), y=butterfly2y10y30y), colour=gg_color_hue(2)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + theme(panel.background = element_rect(fill = NA))
g = stack_plot(p1, p2)
grid.draw(g)
third_factor_cor = cor(third_factor_butterfly$pc3, third_factor_butterfly$butterfly2y10y30y)
third_factor_cor
library(quantmod)
library(downloader)
terms = c(1, 2, 3, 4, 5, 7, 10, 30)
for (term in terms) {
getSymbols(paste('DSWP', term, sep=''), src='FRED')
}
DSWP1 = DSWP1[!is.na(DSWP1)]
DSWP2 = DSWP2[!is.na(DSWP2)]
DSWP3 = DSWP3[!is.na(DSWP3)]
DSWP4 = DSWP4[!is.na(DSWP4)]
DSWP5 = DSWP5[!is.na(DSWP5)]
DSWP7 = DSWP7[!is.na(DSWP7)]
DSWP10 = DSWP10[!is.na(DSWP10)]
DSWP30 = DSWP30[!is.na(DSWP30)]
curve2_1 = DSWP2 - DSWP1
curve4_1 = DSWP4 - DSWP1
curve3_1 = DSWP3 - DSWP1
curve10_2 = DSWP10 - DSWP2
curve10_5 = DSWP10 - DSWP5
curve5_1 = DSWP5 - DSWP1
# 2-1, 3-1, 4-1, 5-1, 7-1, 10-2, 10-5, 30-10
curve7_1 = DSWP7 - DSWP1
curve30_10 = DSWP30 - DSWP10
# curve2_1 = dailyReturn(curve2_1)
# curve3_1 = dailyReturn(curve3_1)
# curve4_1 = dailyReturn(curve4_1)
# curve5_1 = dailyReturn(curve5_1)
# curve7_1 = dailyReturn(curve7_1)
# curve10_2 = dailyReturn(curve10_2)
# curve10_5 = dailyReturn(curve10_5)
# curve30_10 = dailyReturn(curve30_10)
curve2_1 = diff(curve2_1, lag=1)
curve3_1 = diff(curve3_1, lag=1)
curve4_1 = diff(curve4_1, lag=1)
curve5_1 = diff(curve5_1, lag=1)
curve7_1 = diff(curve7_1, lag=1)
curve10_2 = diff(curve10_2, lag=1)
curve10_5 = diff(curve10_5, lag=1)
curve30_10 = diff(curve30_10, lag=1)
curve2_1 = curve2_1[!is.na(curve2_1)]
curve3_1 = curve3_1[!is.na(curve3_1)]
curve4_1 = curve4_1[!is.na(curve4_1)]
curve5_1 = curve5_1[!is.na(curve5_1)]
curve7_1 = curve7_1[!is.na(curve7_1)]
curve10_2 = curve10_2[!is.na(curve10_2)]
curve10_5 = curve10_5[!is.na(curve10_5)]
curve30_10 = curve30_10[!is.na(curve30_10)]
rates = cbind(curve2_1, curve3_1, curve4_1, curve5_1, curve7_1, curve10_2, curve10_5, curve30_10)
rates = last(rates, 250)
colnames(rates) = c('curve2y1y', 'curve3y1y', 'curve4y1y', 'curve5y1y', 'curve7y1y', 'curve10y2y', 'curve10y5y', 'curve30y10y')
library(ggplot2)
library(reshape)
dataframe = data.frame(index(rates), rates)
colnames(dataframe) = c('date', 'curve2y1y', 'curve3y1y', 'curve4y1y', 'curve5y1y', 'curve7y1y', 'curve10y2y', 'curve10y5y', 'curve30y10y')
melted = melt(dataframe, id.vars='date')
plot = ggplot(data=melted, aes(x=as.Date(date), y=value, color=variable)) + geom_line() + xlab('Curve Rates') + ylab('Date')
plot
pcadata = rates
fit = princomp(pcadata, cor=FALSE, scores=TRUE)
covariance_matrix = cor(pcadata)
require(corrplot)
corrplot(covariance_matrix, method='shade', type='full', shade.col=NA, tl.col='black')
library(ggbiplot)
ggbiplot(fit, obs.scale=1, var.scale=1)
ggscreeplot(fit)
scores = fit$scores
scores_dataframe = data.frame(index(rates), scores)
colnames(scores_dataframe) = c('date', 'pc1', 'pc2', 'pc3', 'pc4', 'pc5', 'pc6', 'pc7', 'pc8')
keeps = c('date', 'pc1', 'pc2', 'pc3')
scores_dataframe = scores_dataframe[keeps]
scores_melted = melt(scores_dataframe, id.vars='date')
plot = ggplot(data=scores_melted, aes(x=as.Date(date), y=value, color=variable)) + geom_line() + xlab('Date') + ylab('Principal Component Score')
plot
loadings = with(fit, unclass(loadings))
loadings
loadings_dataframe = data.frame(index(loadings), loadings)
colnames(loadings_dataframe) = c('tenor', 'pc1', 'pc2', 'pc3', 'pc4', 'pc5', 'pc6', 'pc7', 'pc8')
keeps = c('tenor', 'pc1', 'pc2', 'pc3')
loadings_dataframe = loadings_dataframe[keeps]
loadings_melted = melt(loadings_dataframe, id.vars='tenor')
plot = ggplot() + geom_line(data=loadings_melted, aes(x=tenor, y=value, color=variable)) + scale_x_discrete(labels=c('2y1y', '3y1y', '4y1y', '5y1y', '7y1y', '10y2y', '10y5y', '30y10y')) + xlab('Tenor') + ylab('Loading of First 3 PCs')
plot
# first factor analysis
source('graphing_utility.R')
first_factor_10y = data.frame(rownames(scores), scores_dataframe$pc1, dailyReturn(last(DSWP10, 250)))
colnames(first_factor_10y) = c('date', 'pc1', 'y10')
first_factor_10y$pc1 = -first_factor_10y$pc1
p1 = ggplot() + geom_line(data=first_factor_10y, aes(x=as.Date(date), y=pc1), colour=gg_color_hue(1)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + xlab('Date') + ylab('left/red: PC1\nright/blue: 10y Yield')
y10 = diff(last(DSWP10, 250), lag=1)
y10 = y10[!is.na(y10)]
first_factor_10y = data.frame(rownames(scores), scores_dataframe$pc1, y10)
y10 = diff(last(DSWP10, 251), lag=1)
y10 = y10[!is.na(y10)]
first_factor_10y = data.frame(rownames(scores), scores_dataframe$pc1, y10)
colnames(first_factor_10y) = c('date', 'pc1', 'y10')
first_factor_10y$pc1 = -first_factor_10y$pc1
p1 = ggplot() + geom_line(data=first_factor_10y, aes(x=as.Date(date), y=pc1), colour=gg_color_hue(1)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + xlab('Date') + ylab('left/red: PC1\nright/blue: 10y Yield')
p2 = ggplot() + geom_line(data=first_factor_10y, aes(x=as.Date(date), y=y10), colour=gg_color_hue(2)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + theme(panel.background = element_rect(fill = NA))
g = stack_plot(p1, p2)
grid.draw(g)
first_factor_cor = cor(first_factor_10y$pc1, first_factor_10y$y10)
first_factor_cor
# second factor analysis
second_factor_10y2y = data.frame(rownames(scores), scores_dataframe$pc2, (last(curve10_2, 250)))
colnames(second_factor_10y2y) = c('date', 'pc2', 'curve10y2y')
second_factor_10y2y$pc2 = -second_factor_10y2y$pc2
p1 = ggplot() + geom_line(data=second_factor_10y2y, aes(x=as.Date(date), y=pc2), colour=gg_color_hue(1)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + xlab('Date') + ylab('left/red: PC2\nright/blue: 10s2s Yield')
p2 = ggplot() + geom_line(data=second_factor_10y2y, aes(x=as.Date(date), y=curve10y2y), colour=gg_color_hue(2)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + theme(panel.background = element_rect(fill = NA))
g = stack_plot(p1, p2)
grid.draw(g)
second_factor_cor = cor(second_factor_10y2y$pc2, second_factor_10y2y$curve10y2y)
second_factor_cor
butterfly2_10_30 = (DSWP10 - DSWP5) - (DSWP30 - DSWP10)
butterfly2_10_30 = (DSWP10 - DSWP5) - (DSWP30 - DSWP10)
butterfly2_10_30 = diff(butterfly2_10_30, lag=1)
butterfly2_10_30 = butterfly2_10_30[!is.na(butterfly2_10_30)]
butterfly2_10_30 = last(butterfly2_10_30, 250)
third_factor_butterfly = data.frame(rownames(scores), scores_dataframe$pc3, butterfly2_10_30)
colnames(third_factor_butterfly) = c('date', 'pc3', 'butterfly2y10y30y')
third_factor_butterfly$pc3 = -third_factor_butterfly$pc3
p1 = ggplot() + geom_line(data=third_factor_butterfly, aes(x=as.Date(date), y=pc3), colour=gg_color_hue(1)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + xlab('Date') + ylab('left/red: PC3\nright/blue: 2s10s30s Yield')
p2 = ggplot() + geom_line(data=third_factor_butterfly, aes(x=as.Date(date), y=butterfly2y10y30y), colour=gg_color_hue(2)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + theme(panel.background = element_rect(fill = NA))
g = stack_plot(p1, p2)
grid.draw(g)
third_factor_cor = cor(third_factor_butterfly$pc3, third_factor_butterfly$butterfly2y10y30y)
third_factor_cor
second_factor_10y2y = data.frame(rownames(scores), scores_dataframe$pc2, (last(curve10_2, 250)))
colnames(second_factor_10y2y) = c('date', 'pc2', 'curve10y2y')
# second_factor_10y2y$pc2 = -second_factor_10y2y$pc2
p1 = ggplot() + geom_line(data=second_factor_10y2y, aes(x=as.Date(date), y=pc2), colour=gg_color_hue(1)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + xlab('Date') + ylab('left/red: PC2\nright/blue: 10s2s Yield')
p2 = ggplot() + geom_line(data=second_factor_10y2y, aes(x=as.Date(date), y=curve10y2y), colour=gg_color_hue(2)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + theme(panel.background = element_rect(fill = NA))
g = stack_plot(p1, p2)
grid.draw(g)
second_factor_cor = cor(second_factor_10y2y$pc2, second_factor_10y2y$curve10y2y)
second_factor_cor
# third factor analysis
butterfly2_10_30 = (DSWP10 - DSWP5) - (DSWP30 - DSWP10)
butterfly2_10_30 = diff(butterfly2_10_30, lag=1)
butterfly2_10_30 = butterfly2_10_30[!is.na(butterfly2_10_30)]
butterfly2_10_30 = last(butterfly2_10_30, 250)
third_factor_butterfly = data.frame(rownames(scores), scores_dataframe$pc3, butterfly2_10_30)
colnames(third_factor_butterfly) = c('date', 'pc3', 'butterfly2y10y30y')
third_factor_butterfly$pc3 = -third_factor_butterfly$pc3
p1 = ggplot() + geom_line(data=third_factor_butterfly, aes(x=as.Date(date), y=pc3), colour=gg_color_hue(1)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + xlab('Date') + ylab('left/red: PC3\nright/blue: 2s10s30s Yield')
p2 = ggplot() + geom_line(data=third_factor_butterfly, aes(x=as.Date(date), y=butterfly2y10y30y), colour=gg_color_hue(2)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + theme(panel.background = element_rect(fill = NA))
g = stack_plot(p1, p2)
grid.draw(g)
third_factor_cor = cor(third_factor_butterfly$pc3, third_factor_butterfly$butterfly2y10y30y)
third_factor_cor
acf(curve2_1)
acf = acf(curve2_1)
acf
acf = acf(DSWP1)
acf
acf = acf(diff(DSWP1, lag=1))
acf = acf(diff(DSWP1, lag=1)[!is.na(diff(DSWP1, lag=1))])
acf
acf = acf(dailyReturn(DSWP1))
acf
acf(DSWP1)
acf(dailyReturn(DSWP1))
acf(dailyReturn(DSWP1))[]
acf(dailyReturn(DSWP1))[1]
acf(dailyReturn(DSWP1), lag=1)
acf(dailyReturn(DSWP1), lag=2)
acf(dailyReturn(DSWP1), lag=1)
acf(dailyReturn(DSWP1), lag=3)
acf(dailyReturn(DSWP1))
bacf = acf(dailyReturns(DSWP1), plot=FALSE)
bacf = acf(dailyReturn(DSWP1), plot=FALSE)
bacf
bacfdf <- with(bacf, data.frame(lag, acf))
View(bacfdf)
View(bacf)
bacf$lag
q = ggplot(data = bacfdf, mapping = aes(x = lag, y = acf)) + geom_hline(aes(yintercept = 0)) + geom_segment(mapping = aes(xend = lag, yend = 0))
q
